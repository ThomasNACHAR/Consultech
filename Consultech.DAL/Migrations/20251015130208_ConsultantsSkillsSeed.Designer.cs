// <auto-generated />
using System;
using Consultech.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Consultech.DAL.Migrations
{
    [DbContext(typeof(ConsultechDbContext))]
    [Migration("20251015130208_ConsultantsSkillsSeed")]
    partial class ConsultantsSkillsSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ConsultantSkill", b =>
                {
                    b.Property<int>("ConsultantsId")
                        .HasColumnType("int");

                    b.Property<int>("SkillsId")
                        .HasColumnType("int");

                    b.HasKey("ConsultantsId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("ConsultantSkill");

                    b.HasData(
                        new
                        {
                            ConsultantsId = 1,
                            SkillsId = 1
                        },
                        new
                        {
                            ConsultantsId = 1,
                            SkillsId = 4
                        },
                        new
                        {
                            ConsultantsId = 2,
                            SkillsId = 2
                        },
                        new
                        {
                            ConsultantsId = 2,
                            SkillsId = 5
                        },
                        new
                        {
                            ConsultantsId = 3,
                            SkillsId = 3
                        },
                        new
                        {
                            ConsultantsId = 3,
                            SkillsId = 1
                        },
                        new
                        {
                            ConsultantsId = 4,
                            SkillsId = 3
                        },
                        new
                        {
                            ConsultantsId = 5,
                            SkillsId = 5
                        },
                        new
                        {
                            ConsultantsId = 5,
                            SkillsId = 4
                        });
                });

            modelBuilder.Entity("Consultech.DAL.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ActivitySector")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ActivitySector = 4,
                            Address = "1007 Mountain Drive, Gotham",
                            CompanyName = "Wayne Enterprises",
                            Email = "contact@wayneenterprises.com"
                        },
                        new
                        {
                            Id = 2,
                            ActivitySector = 3,
                            Address = "200 Park Avenue, New York",
                            CompanyName = "Stark Industries",
                            Email = "info@starkindustries.com"
                        },
                        new
                        {
                            Id = 3,
                            ActivitySector = 8,
                            Address = "1 Planet Plaza, Metropolis",
                            CompanyName = "Daily Planet",
                            Email = "editor@dailyplanet.com"
                        },
                        new
                        {
                            Id = 4,
                            ActivitySector = 0,
                            Address = "Norman Tower, New York",
                            CompanyName = "Oscorp Technologies",
                            Email = "admin@oscorp.com"
                        },
                        new
                        {
                            Id = 5,
                            ActivitySector = 3,
                            Address = "Star City Central Ave",
                            CompanyName = "Queen Consolidated",
                            Email = "hq@queenconsolidated.com"
                        });
                });

            modelBuilder.Entity("Consultech.DAL.Entities.Consultant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Consultants");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "bruce@wayneenterprises.com",
                            FirstName = "Bruce",
                            IsAvailable = true,
                            LastName = "Wayne",
                            StartDate = new DateTime(2010, 5, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 2,
                            Email = "tony@starkindustries.com",
                            FirstName = "Tony",
                            IsAvailable = false,
                            LastName = "Stark",
                            StartDate = new DateTime(2012, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 3,
                            Email = "diana@themiscira.org",
                            FirstName = "Diana",
                            IsAvailable = true,
                            LastName = "Prince",
                            StartDate = new DateTime(2015, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 4,
                            Email = "clark@dailyplanet.com",
                            FirstName = "Clark",
                            IsAvailable = false,
                            LastName = "Kent",
                            StartDate = new DateTime(2011, 9, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = 5,
                            Email = "peter@dailybugle.com",
                            FirstName = "Peter",
                            IsAvailable = true,
                            LastName = "Parker",
                            StartDate = new DateTime(2018, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("Consultech.DAL.Entities.Mission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Budget")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ClientId")
                        .HasColumnType("int");

                    b.Property<int?>("ConsultantId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ConsultantId");

                    b.ToTable("Missions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Budget = 1000000m,
                            ClientId = 1,
                            ConsultantId = 1,
                            Description = "Protection de Gotham contre la pègre locale.",
                            EndDate = new DateTime(2023, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2023, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Défense de Gotham"
                        },
                        new
                        {
                            Id = 2,
                            Budget = 20000000m,
                            ClientId = 2,
                            ConsultantId = 2,
                            Description = "Déploiement de drones de défense autonomes.",
                            EndDate = new DateTime(2029, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2026, 4, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Iron Legion"
                        },
                        new
                        {
                            Id = 3,
                            Budget = 5000000m,
                            ClientId = 3,
                            ConsultantId = 3,
                            Description = "Mission diplomatique et maintien de la paix.",
                            EndDate = new DateTime(2030, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2027, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Paix mondiale"
                        },
                        new
                        {
                            Id = 4,
                            Budget = 8000000m,
                            ClientId = 3,
                            ConsultantId = 4,
                            Description = "Protection de Metropolis contre les attaques extraterrestres.",
                            EndDate = new DateTime(2026, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2025, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Sauvetage métropolitain"
                        },
                        new
                        {
                            Id = 5,
                            Budget = 250000m,
                            ClientId = 4,
                            ConsultantId = 5,
                            Description = "Analyse et surveillance cybercriminelle.",
                            EndDate = new DateTime(2025, 3, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            StartDate = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Projet Arachné"
                        });
                });

            modelBuilder.Entity("Consultech.DAL.Entities.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Skills");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Category = "Soft Skills",
                            Level = 3,
                            Title = "Combat tactique"
                        },
                        new
                        {
                            Id = 2,
                            Category = "Développement",
                            Level = 3,
                            Title = "Ingénierie avancée"
                        },
                        new
                        {
                            Id = 3,
                            Category = "Soft Skills",
                            Level = 2,
                            Title = "Super force"
                        },
                        new
                        {
                            Id = 4,
                            Category = "Soft Skills",
                            Level = 3,
                            Title = "Discrétion"
                        },
                        new
                        {
                            Id = 5,
                            Category = "Infrastructure",
                            Level = 2,
                            Title = "Hacking"
                        });
                });

            modelBuilder.Entity("ConsultantSkill", b =>
                {
                    b.HasOne("Consultech.DAL.Entities.Consultant", null)
                        .WithMany()
                        .HasForeignKey("ConsultantsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Consultech.DAL.Entities.Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Consultech.DAL.Entities.Mission", b =>
                {
                    b.HasOne("Consultech.DAL.Entities.Client", "Client")
                        .WithMany("Missions")
                        .HasForeignKey("ClientId");

                    b.HasOne("Consultech.DAL.Entities.Consultant", "Consultant")
                        .WithMany()
                        .HasForeignKey("ConsultantId");

                    b.Navigation("Client");

                    b.Navigation("Consultant");
                });

            modelBuilder.Entity("Consultech.DAL.Entities.Client", b =>
                {
                    b.Navigation("Missions");
                });
#pragma warning restore 612, 618
        }
    }
}
